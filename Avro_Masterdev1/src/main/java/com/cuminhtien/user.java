/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.cuminhtien;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class user extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -306558632017375711L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"user\",\"namespace\":\"com.cuminhtien\",\"fields\":[{\"name\":\"username\",\"type\":\"string\",\"default\":\"NONE\"},{\"name\":\"age\",\"type\":\"int\",\"default\":-1},{\"name\":\"phone\",\"type\":\"string\",\"default\":\"NONE\"},{\"name\":\"gender\",\"type\":{\"type\":\"enum\",\"name\":\"gender\",\"symbols\":[\"FEMALE\",\"MALE\"]}},{\"name\":\"housenum\",\"type\":\"string\",\"default\":\"NONE\"},{\"name\":\"address\",\"type\":{\"type\":\"record\",\"name\":\"mailing_address\",\"fields\":[{\"name\":\"street\",\"type\":\"string\",\"default\":\"NONE\"},{\"name\":\"city\",\"type\":\"string\",\"default\":\"NONE\"}]}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<user> ENCODER =
      new BinaryMessageEncoder<user>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<user> DECODER =
      new BinaryMessageDecoder<user>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<user> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<user> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<user> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<user>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this user to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a user from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a user instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static user fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.lang.CharSequence username;
  private int age;
  private java.lang.CharSequence phone;
  private com.cuminhtien.gender gender;
  private java.lang.CharSequence housenum;
  private com.cuminhtien.mailing_address address;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public user() {}

  /**
   * All-args constructor.
   * @param username The new value for username
   * @param age The new value for age
   * @param phone The new value for phone
   * @param gender The new value for gender
   * @param housenum The new value for housenum
   * @param address The new value for address
   */
  public user(java.lang.CharSequence username, java.lang.Integer age, java.lang.CharSequence phone, com.cuminhtien.gender gender, java.lang.CharSequence housenum, com.cuminhtien.mailing_address address) {
    this.username = username;
    this.age = age;
    this.phone = phone;
    this.gender = gender;
    this.housenum = housenum;
    this.address = address;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return username;
    case 1: return age;
    case 2: return phone;
    case 3: return gender;
    case 4: return housenum;
    case 5: return address;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: username = (java.lang.CharSequence)value$; break;
    case 1: age = (java.lang.Integer)value$; break;
    case 2: phone = (java.lang.CharSequence)value$; break;
    case 3: gender = (com.cuminhtien.gender)value$; break;
    case 4: housenum = (java.lang.CharSequence)value$; break;
    case 5: address = (com.cuminhtien.mailing_address)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'username' field.
   * @return The value of the 'username' field.
   */
  public java.lang.CharSequence getUsername() {
    return username;
  }


  /**
   * Sets the value of the 'username' field.
   * @param value the value to set.
   */
  public void setUsername(java.lang.CharSequence value) {
    this.username = value;
  }

  /**
   * Gets the value of the 'age' field.
   * @return The value of the 'age' field.
   */
  public int getAge() {
    return age;
  }


  /**
   * Sets the value of the 'age' field.
   * @param value the value to set.
   */
  public void setAge(int value) {
    this.age = value;
  }

  /**
   * Gets the value of the 'phone' field.
   * @return The value of the 'phone' field.
   */
  public java.lang.CharSequence getPhone() {
    return phone;
  }


  /**
   * Sets the value of the 'phone' field.
   * @param value the value to set.
   */
  public void setPhone(java.lang.CharSequence value) {
    this.phone = value;
  }

  /**
   * Gets the value of the 'gender' field.
   * @return The value of the 'gender' field.
   */
  public com.cuminhtien.gender getGender() {
    return gender;
  }


  /**
   * Sets the value of the 'gender' field.
   * @param value the value to set.
   */
  public void setGender(com.cuminhtien.gender value) {
    this.gender = value;
  }

  /**
   * Gets the value of the 'housenum' field.
   * @return The value of the 'housenum' field.
   */
  public java.lang.CharSequence getHousenum() {
    return housenum;
  }


  /**
   * Sets the value of the 'housenum' field.
   * @param value the value to set.
   */
  public void setHousenum(java.lang.CharSequence value) {
    this.housenum = value;
  }

  /**
   * Gets the value of the 'address' field.
   * @return The value of the 'address' field.
   */
  public com.cuminhtien.mailing_address getAddress() {
    return address;
  }


  /**
   * Sets the value of the 'address' field.
   * @param value the value to set.
   */
  public void setAddress(com.cuminhtien.mailing_address value) {
    this.address = value;
  }

  /**
   * Creates a new user RecordBuilder.
   * @return A new user RecordBuilder
   */
  public static com.cuminhtien.user.Builder newBuilder() {
    return new com.cuminhtien.user.Builder();
  }

  /**
   * Creates a new user RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new user RecordBuilder
   */
  public static com.cuminhtien.user.Builder newBuilder(com.cuminhtien.user.Builder other) {
    if (other == null) {
      return new com.cuminhtien.user.Builder();
    } else {
      return new com.cuminhtien.user.Builder(other);
    }
  }

  /**
   * Creates a new user RecordBuilder by copying an existing user instance.
   * @param other The existing instance to copy.
   * @return A new user RecordBuilder
   */
  public static com.cuminhtien.user.Builder newBuilder(com.cuminhtien.user other) {
    if (other == null) {
      return new com.cuminhtien.user.Builder();
    } else {
      return new com.cuminhtien.user.Builder(other);
    }
  }

  /**
   * RecordBuilder for user instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<user>
    implements org.apache.avro.data.RecordBuilder<user> {

    private java.lang.CharSequence username;
    private int age;
    private java.lang.CharSequence phone;
    private com.cuminhtien.gender gender;
    private java.lang.CharSequence housenum;
    private com.cuminhtien.mailing_address address;
    private com.cuminhtien.mailing_address.Builder addressBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.cuminhtien.user.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.username)) {
        this.username = data().deepCopy(fields()[0].schema(), other.username);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.age)) {
        this.age = data().deepCopy(fields()[1].schema(), other.age);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.phone)) {
        this.phone = data().deepCopy(fields()[2].schema(), other.phone);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.gender)) {
        this.gender = data().deepCopy(fields()[3].schema(), other.gender);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.housenum)) {
        this.housenum = data().deepCopy(fields()[4].schema(), other.housenum);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.address)) {
        this.address = data().deepCopy(fields()[5].schema(), other.address);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (other.hasAddressBuilder()) {
        this.addressBuilder = com.cuminhtien.mailing_address.newBuilder(other.getAddressBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing user instance
     * @param other The existing instance to copy.
     */
    private Builder(com.cuminhtien.user other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.username)) {
        this.username = data().deepCopy(fields()[0].schema(), other.username);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.age)) {
        this.age = data().deepCopy(fields()[1].schema(), other.age);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.phone)) {
        this.phone = data().deepCopy(fields()[2].schema(), other.phone);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.gender)) {
        this.gender = data().deepCopy(fields()[3].schema(), other.gender);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.housenum)) {
        this.housenum = data().deepCopy(fields()[4].schema(), other.housenum);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.address)) {
        this.address = data().deepCopy(fields()[5].schema(), other.address);
        fieldSetFlags()[5] = true;
      }
      this.addressBuilder = null;
    }

    /**
      * Gets the value of the 'username' field.
      * @return The value.
      */
    public java.lang.CharSequence getUsername() {
      return username;
    }


    /**
      * Sets the value of the 'username' field.
      * @param value The value of 'username'.
      * @return This builder.
      */
    public com.cuminhtien.user.Builder setUsername(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.username = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'username' field has been set.
      * @return True if the 'username' field has been set, false otherwise.
      */
    public boolean hasUsername() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'username' field.
      * @return This builder.
      */
    public com.cuminhtien.user.Builder clearUsername() {
      username = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'age' field.
      * @return The value.
      */
    public int getAge() {
      return age;
    }


    /**
      * Sets the value of the 'age' field.
      * @param value The value of 'age'.
      * @return This builder.
      */
    public com.cuminhtien.user.Builder setAge(int value) {
      validate(fields()[1], value);
      this.age = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'age' field has been set.
      * @return True if the 'age' field has been set, false otherwise.
      */
    public boolean hasAge() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'age' field.
      * @return This builder.
      */
    public com.cuminhtien.user.Builder clearAge() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'phone' field.
      * @return The value.
      */
    public java.lang.CharSequence getPhone() {
      return phone;
    }


    /**
      * Sets the value of the 'phone' field.
      * @param value The value of 'phone'.
      * @return This builder.
      */
    public com.cuminhtien.user.Builder setPhone(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.phone = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'phone' field has been set.
      * @return True if the 'phone' field has been set, false otherwise.
      */
    public boolean hasPhone() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'phone' field.
      * @return This builder.
      */
    public com.cuminhtien.user.Builder clearPhone() {
      phone = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'gender' field.
      * @return The value.
      */
    public com.cuminhtien.gender getGender() {
      return gender;
    }


    /**
      * Sets the value of the 'gender' field.
      * @param value The value of 'gender'.
      * @return This builder.
      */
    public com.cuminhtien.user.Builder setGender(com.cuminhtien.gender value) {
      validate(fields()[3], value);
      this.gender = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'gender' field has been set.
      * @return True if the 'gender' field has been set, false otherwise.
      */
    public boolean hasGender() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'gender' field.
      * @return This builder.
      */
    public com.cuminhtien.user.Builder clearGender() {
      gender = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'housenum' field.
      * @return The value.
      */
    public java.lang.CharSequence getHousenum() {
      return housenum;
    }


    /**
      * Sets the value of the 'housenum' field.
      * @param value The value of 'housenum'.
      * @return This builder.
      */
    public com.cuminhtien.user.Builder setHousenum(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.housenum = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'housenum' field has been set.
      * @return True if the 'housenum' field has been set, false otherwise.
      */
    public boolean hasHousenum() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'housenum' field.
      * @return This builder.
      */
    public com.cuminhtien.user.Builder clearHousenum() {
      housenum = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'address' field.
      * @return The value.
      */
    public com.cuminhtien.mailing_address getAddress() {
      return address;
    }


    /**
      * Sets the value of the 'address' field.
      * @param value The value of 'address'.
      * @return This builder.
      */
    public com.cuminhtien.user.Builder setAddress(com.cuminhtien.mailing_address value) {
      validate(fields()[5], value);
      this.addressBuilder = null;
      this.address = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'address' field has been set.
      * @return True if the 'address' field has been set, false otherwise.
      */
    public boolean hasAddress() {
      return fieldSetFlags()[5];
    }

    /**
     * Gets the Builder instance for the 'address' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.cuminhtien.mailing_address.Builder getAddressBuilder() {
      if (addressBuilder == null) {
        if (hasAddress()) {
          setAddressBuilder(com.cuminhtien.mailing_address.newBuilder(address));
        } else {
          setAddressBuilder(com.cuminhtien.mailing_address.newBuilder());
        }
      }
      return addressBuilder;
    }

    /**
     * Sets the Builder instance for the 'address' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public com.cuminhtien.user.Builder setAddressBuilder(com.cuminhtien.mailing_address.Builder value) {
      clearAddress();
      addressBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'address' field has an active Builder instance
     * @return True if the 'address' field has an active Builder instance
     */
    public boolean hasAddressBuilder() {
      return addressBuilder != null;
    }

    /**
      * Clears the value of the 'address' field.
      * @return This builder.
      */
    public com.cuminhtien.user.Builder clearAddress() {
      address = null;
      addressBuilder = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public user build() {
      try {
        user record = new user();
        record.username = fieldSetFlags()[0] ? this.username : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.age = fieldSetFlags()[1] ? this.age : (java.lang.Integer) defaultValue(fields()[1]);
        record.phone = fieldSetFlags()[2] ? this.phone : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.gender = fieldSetFlags()[3] ? this.gender : (com.cuminhtien.gender) defaultValue(fields()[3]);
        record.housenum = fieldSetFlags()[4] ? this.housenum : (java.lang.CharSequence) defaultValue(fields()[4]);
        if (addressBuilder != null) {
          try {
            record.address = this.addressBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("address"));
            throw e;
          }
        } else {
          record.address = fieldSetFlags()[5] ? this.address : (com.cuminhtien.mailing_address) defaultValue(fields()[5]);
        }
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<user>
    WRITER$ = (org.apache.avro.io.DatumWriter<user>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<user>
    READER$ = (org.apache.avro.io.DatumReader<user>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeString(this.username);

    out.writeInt(this.age);

    out.writeString(this.phone);

    out.writeEnum(this.gender.ordinal());

    out.writeString(this.housenum);

    this.address.customEncode(out);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.username = in.readString(this.username instanceof Utf8 ? (Utf8)this.username : null);

      this.age = in.readInt();

      this.phone = in.readString(this.phone instanceof Utf8 ? (Utf8)this.phone : null);

      this.gender = com.cuminhtien.gender.values()[in.readEnum()];

      this.housenum = in.readString(this.housenum instanceof Utf8 ? (Utf8)this.housenum : null);

      if (this.address == null) {
        this.address = new com.cuminhtien.mailing_address();
      }
      this.address.customDecode(in);

    } else {
      for (int i = 0; i < 6; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.username = in.readString(this.username instanceof Utf8 ? (Utf8)this.username : null);
          break;

        case 1:
          this.age = in.readInt();
          break;

        case 2:
          this.phone = in.readString(this.phone instanceof Utf8 ? (Utf8)this.phone : null);
          break;

        case 3:
          this.gender = com.cuminhtien.gender.values()[in.readEnum()];
          break;

        case 4:
          this.housenum = in.readString(this.housenum instanceof Utf8 ? (Utf8)this.housenum : null);
          break;

        case 5:
          if (this.address == null) {
            this.address = new com.cuminhtien.mailing_address();
          }
          this.address.customDecode(in);
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










